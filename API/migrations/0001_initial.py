# Generated by Django 3.2.3 on 2023-03-05 07:15

import API.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leg', models.TextField(blank=True, choices=[('R', 'Правая'), ('L', 'Левая'), ('B', 'Обе')], null=True, verbose_name='Нога')),
                ('position', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('goalkeeper', 'Вратарь'), ('central_defender', 'Центральный защитник'), ('left_defender', 'Левый защитник'), ('right_defender', 'Правый защитник'), ('central_defensive_midfielder', 'Центральный опорный полузащитник'), ('central_midfielder', 'Центральный полузащитник'), ('left_midfielder', 'Левый полузащитник'), ('right_midfielder', 'Правый полузащитник'), ('centre forward', 'Центральный нападающий'), ('right_winger', 'Правый вингер'), ('left_winger', 'Левый вингер'), ('insider', 'Инсайдер')], max_length=185, null=True, verbose_name='Позиция')),
                ('age', models.CharField(blank=True, max_length=5, null=True, verbose_name='Возраст')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('height', models.CharField(blank=True, max_length=4, null=True, verbose_name='Рост')),
                ('weight', models.CharField(blank=True, max_length=4, null=True, verbose_name='Вес')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер Телефона')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Почта')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Страна')),
                ('shengen', models.BooleanField(blank=True, default=False, null=True, verbose_name='Шенген')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Город')),
                ('description', models.TextField(blank=True, max_length=254, null=True, verbose_name='Описание')),
                ('is_show', models.BooleanField(blank=True, default=True, null=True, verbose_name='Отображать_всем')),
                ('subscribe', models.IntegerField(blank=True, default=1, verbose_name='Количество видео')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, upload_to=API.models.photo_upload_to)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер Телефона')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Почта')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Страна')),
                ('is_show', models.BooleanField(blank=True, default=True, null=True, verbose_name='Отображать_всем')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Город')),
                ('country_s', models.CharField(blank=True, max_length=50, verbose_name='Страна, в которой находится школа')),
                ('city_s', models.CharField(blank=True, max_length=50, verbose_name='Город, в котором находится школа')),
                ('phone_s', models.CharField(blank=True, max_length=15, verbose_name='Номер телефона школы')),
                ('e_mail_s', models.EmailField(blank=True, max_length=254, verbose_name='E-Mail школы')),
                ('photo_s', models.FileField(blank=True, null=True, upload_to='school_photoes', verbose_name='Фото школы')),
                ('players', models.ManyToManyField(blank=True, related_name='trainer_players', to='API.Player', verbose_name='Игроки тренера')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер Телефона')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Почта')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Страна')),
                ('is_show', models.BooleanField(blank=True, default=True, null=True, verbose_name='Отображать_всем')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Город')),
                ('school', models.TextField(blank=True, max_length=250, verbose_name='Школы(Название, страна, город)')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayersVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(blank=True, max_length=150, null=True, upload_to=API.models.video_upload_to, verbose_name='Видео')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Заголовок')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='API.player')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.AddField(
            model_name='player',
            name='views',
            field=models.ManyToManyField(blank=True, related_name='player_views', to='API.View'),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер Телефона')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Почта')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Город')),
                ('is_show', models.BooleanField(blank=True, default=True, null=True, verbose_name='Отображать_всем')),
                ('players', models.ManyToManyField(blank=True, related_name='parent_players', to='API.Player', verbose_name='Игроки родителя')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='players', to='API.View', verbose_name='Просмотры')),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Национальное название клуба')),
                ('eng_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Английское название клуба')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Почта')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Страна')),
                ('is_show', models.BooleanField(blank=True, default=True, null=True, verbose_name='Отображать_всем')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Город')),
                ('schools', models.JSONField(blank=True, null=True, verbose_name='Школы')),
                ('school_ages', models.TextField(blank=True, choices=[('3-4', '3-4'), ('5-6', '5-6'), ('7-8', '7-8'), ('9-10', '9-10'), ('11-12', '11-12'), ('13-14', '13-14')], default='Возрастная группа', null=True, verbose_name='Возрастная группа школы')),
                ('players', models.ManyToManyField(blank=True, related_name='club_players', to='API.Player', verbose_name='Игроки клуба')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер Телефона')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Почта')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Город')),
                ('is_show', models.BooleanField(blank=True, default=True, null=True, verbose_name='Отображать_всем')),
                ('players', models.ManyToManyField(blank=True, related_name='agent_players', to='API.Player', verbose_name='Игроки агента')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
